//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成
//     如果重新生成代码，将丢失对此文件所做的更改。
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;
using System.Collections.Generic;
using System.Linq;
using System.Text;

public class ReadTable
{
    private static ReadTable instance;
    private Dictionary<string, Dictionary<string, Dictionary<string, string>>> Tables;
    public static ReadTable GetInstance()
    {
        if (instance == null)
            instance = new ReadTable();
        return instance;
        throw new System.NotImplementedException();
    }
    //初始化表数据//
	private ReadTable()
	{
        Tables = new Dictionary<string, Dictionary<string, Dictionary<string, string>>>();
        TextAsset[] tables = Resources.LoadAll<TextAsset>("Tables");
        foreach (TextAsset table in tables)
        {
            Tables.Add(table.name, readTable(table));
        }
	}
    //读取表数据//
    Dictionary<string, Dictionary<string, string>> readTable(TextAsset table)
    {
        string[] bytes = table.text.Split(new string[] { "\r\n" }, System.StringSplitOptions.None);
        Dictionary<string, Dictionary<string, string>> data = new Dictionary<string, Dictionary<string, string>>();
        string[] colsName = bytes[1].Split(',');
        for (int i = 2; i < bytes.Length - 1; i++)
        {
            string[] row = bytes[i].Split(',');
            Dictionary<string, string> value = new Dictionary<string, string>();
            for (int j = 0; j < row.Length; j++)
            {
                value.Add(colsName[j], row[j]);
            }
            data.Add(row[0], value);
        }
        return data;
    }
    //获取表//
	public Dictionary<string, Dictionary<string, string>> GetTable(string tableName)
	{
        if (Tables.ContainsKey(tableName))
            return Tables[tableName];
        else
        {
            return null;
        }
		throw new System.NotImplementedException();
	}
    //获取值//
     public string GetValue(string tableName, string primaryKey, string colsName)
    {
        Dictionary<string, string> row;
        if((row = GetRow(tableName,primaryKey)) == null)
        {
            return null;
        }
        if (row.ContainsKey(colsName))
            return row[colsName];
        else
        {
            return null;
        }
    }
    //获取行//
     public Dictionary<string, string> GetRow(string tableName, string primaryKey)
     {
         Dictionary<string, Dictionary<string, string>> table;
         if ((table = GetTable(tableName)) == null)
         {
             return null;
         }
         if (table.ContainsKey(primaryKey))
             return table[primaryKey];
         else
         {
             return null;
         }
     }
}

